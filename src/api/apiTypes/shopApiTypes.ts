export interface PagedResponse<TItem> {
  total: number;
  count: number;
  offset: number;
  limit: number;
  items: TItem[];
}

export interface Category {
  id: number;
  name: string;
  autogeneratedSlug: string;
  parentId?: number;
}

export type MediaImage = {
  id: string;
  isMain: boolean;
  image160pxUrl: string;
  image400pxUrl: string;
  image800pxUrl: string;
  image1500pxUrl: string;
  imageOriginalUrl: string;
};

export interface Product {
  id: number;
  name: string;
  price: number;
  imageUrl: string;
  inStock: boolean;
}

export interface ProductDetails extends Product {
  description: string;
  media: {
    images: MediaImage[];
  };
}

export type GetProductsParams = {
  offset?: number;
  limit?: number;
  keyword?: string;
  category?: number;
  sortBy?: string;
  priceFrom?: number;
  priceTo?: number;
};

export enum ProductSortingPaths {
  Relevance = 'RELEVANCE',
  AddedDESC = 'ADDED_TIME_DESC',
  AddedASC = 'ADDED_TIME_ASC',
  NameASC = 'NAME_ASC',
  NameDESC = 'NAME_DESC',
  PriceASC = 'PRICE_ASC',
  PriceDESC = 'PRICE_DESC',
}
